import numpy as np

L = 0.007  # 纺织材料总厚度，单位m
dt1 = 0.01  # 时间步长，单位s
dx1 = 0.0001  # 空间步长，单位m
Nt1 = int(10 * 60 / dt1)  # 时间步数
Nx1 = int(L / dx1)  # 空间步数
r1 = dt1 / (dx1 * dx1)


# 定义人体皮肤温度和水蒸气浓度随时间变化的函数
def Ts(t):
    return 35.84 + np.exp(0.0002 * t)


# 定义网格矩阵
U = np.ones((Nt1, Nx1))

# x1, x2, x3 = 0.002, 0.004, 0.007

# 时间上初始化
for i in range(Nt1):
    U[:, 0][i] = Ts(i * dt1)


def ts(k1, k2, k3):
    li = []
    for x1 in range(1, 6):
        for x2 in range(1, 7 - x1):
            for i in range(1, Nt1):
                for j in range(1, Nx1 - 1):
                    if dx1 * j <= x1 * 0.001:
                        U[i, j] = (U[i - 1, j - 1] * r1 - 2 * r1 * U[i - 1, j] + r1 * U[i - 1, j + 1]) * k1 + U[
                            i - 1, j]
                    elif x1 * 0.001 < dx1 * j <= (x2 + x1) * 0.001:
                        U[i, j] = k2 * (U[i - 1, j - 1] * r1 - 2 * r1 * U[i - 1, j] + r1 * U[i - 1, j + 1]) + U[
                            i - 1, j]
                    elif (x2 + x1) * 0.001 < dx1 * j <= 0.007:
                        U[i, j] = k3 * (U[i - 1, j - 1] * r1 - 2 * r1 * U[i - 1, j] + r1 * U[i - 1, j + 1]) + U[
                            i - 1, j]

            M = np.sum(U[int((x1 + x2)*0.001 / dx1) + 1:, :])
            li.append((M, x1, x2, 7 - x1 - x2))

    li.sort()
    return li[0]


_, x1, x2, x3 = ts(0.541 / (1540 * 1210), 0.58 / (1540 * 1210), 0.5 / (1380 * 1340))
print("第一种情形下各层的厚度：", 0.001*x1, 0.001*x2, 0.001*x3)
_, x21, x22, x23 = ts(0.385 / (1300 * 1360), 0.541 / (1540 * 1210), 0.5 / (1380 * 1340))
print("第二种情形下各层的厚度：", 0.001*x21, 0.001*x22, 0.001*x23)
_, x31, x32, x33 = ts(0.385 / (1300 * 1360), 0.58 / (1540 * 1210), 0.5 / (1380 * 1340))
print("第三种情形下各层的厚度：", 0.001*x31, 0.001*x32, 0.001*x33)
"""
0.001 0.001 0.005
0.005 0.001 0.001
0.005 0.001 0.001
"""