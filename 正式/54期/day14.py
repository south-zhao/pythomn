"""
迭代器：
    在python中，这些数据都有一个内置的方式  iter()
    iter(字符串/列表/元祖/集合/字典/打开的文件 ) 会得到一个结果
    这个结果是一个迭代器
这个迭代器 有两个方法  一个是iter()   一个是next()
iter(迭代器)    得到自己本身，没改变
next(迭代器)    可以得到下一个值了   迭代器的作用   可以得到下一个值
没调用一次next就可以得到下一个值，如果没有值了，再调用，就报错了

"""
"""
生成器：
    自定义的迭代器
    在函数中只要出现了一个yield 这个字，那么这个函数就变成了生成器
执行这个函数，函数代码不会执行，而是返回一个生成器（自定义的迭代器）   

"""
# a = {'name': 1, 'age': 2}
# b = iter(a)
# for i in b:
#     print(i)


# def a():
#     print(1)
#     yield 1     # 卡在这里
#     print(2)
#     yield 2
#
#
# b = a() # 生成器  就是一个自定义的迭代器
# print(next(b))
# print(next(b))
# # print(next(b)) # 报错
# for x in a():
#     print(x)