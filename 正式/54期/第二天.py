# 注释：
# 1. 对代码的解释说明
# 2. 被注释的内容不会被当做代码来运行了
# 为什么要注释？
# 增强代码的可读性  说明这个代码是什么意思？  让别人理解
# 怎么使用注释
# 单行注释以及多行注释
# 单行注释  以英文的#开头  这个符号后面的内容就是被注释了，仅限这一行
# 多行注释   以三对英文的引号包裹的内容就是注释  可以是单引号，双引号
# 关于注释的原则
# 不用全部加注释，只需要为自己觉得重要或不好理解的部分加注释即可
# 扩展一个
# TODO   也属于注释的一种，提示
# 加注释，取消注释  快捷键  Ctrl+/
# 快速复制当前这一行 ctrl + d
# 回退一步  ctrl + z
# 删除这一行  ctrl + y
# cv大法必备    读书人能叫抄
# 复制  Ctrl + c
# 粘贴  ctrl + v
# 保存  ctrl +s

'''
变量
    记录数据的，变化的东西
为什么要使用变量
    为了像人一样去记录这个事物的变化的状态
    记录数据
    从底层看，程序中的数据都是保存在内存中的，变量就是这块内存的名字
变量如何使用
    基础的原则：必须先定义，再使用
变量的定义：
    变量名 =  值
定义一个变量：在内存中会发生一下几件事情： 重点！
    1. 在内存中开辟一个空间
    2. 将值放入到这个空间去
    3. 将这个空间的地址绑定给变量名
使用变量
    直接使用变量名
    本质：顺着这个变量名找到内存地址，然后找到值
'''
# 打印出你的微信的余额   1000    100   900     变化
# 1 是你的微信的余额   支付了以后   少了100
# 可以定义  可以后来修改
# 一定要记住的原则：必须先定义，再使用
# 作为变量名 有三个语法规定必须遵守：
# 1. 只能是英文字母，数字，英文的下划线组成
# 2. 不能是数字开头
# 3. 不能和Python的关键字冲突
# 如何知道Python都有哪些关键字呢？关键字都会去学习到？
# 思考：为什么不能用关键字作为变量名
# 关键字：有的名字你就不能取
# import keyword
# print(keyword.kwlist)
# 中文可以做变量名吗？
# 扩展 在Python3中，中文可以做变量名，但是不要这么去做
# 老杨 = 1
# print(老杨)
# 变量命名的规范  规定和规范
# 违反规定，Python解释器就识别不出来，就报错
# 违反规范，Python解释器识别的出来，不会报错，但是比较low
# 变量名的规范问题
# 规范  不是说你必须遵守  你不遵守也没事 (不会语法报错 代码是可以运行的)
# 1. 变量名要见名知意，不要使用无意义的字符   看到这个名字就知道这个数据应该是什么？
# 2. 推荐用英文，纯小写，用下划线连接起来，不要用中文，也不用拼音，
# 尤其不要用拼音缩写    英语不好 ==》翻译一下
# 有的编程语言是推荐的驼峰体
# laoyang_age = 18 # python推荐的下划线连接
# laoyangAge = 18  # 驼峰体
#  变量    可以变化的量
#  常量    不可以变化的量
# 但是在python中没有常量的概念
# 所以为了约定我们用纯大写表示一个常量,我们自觉的不去更改它
# 第一遍了解  变量值的三大特性
# id       表示的是变量值的内存地址的编号
#          内存地址不同编号肯定不一样
# type      数据类型
# value     值本身
# 一个  = 是赋值，表示将右边的值绑定给左边的名字
# 两个 ==  是判断==左右两边的值和数据类型是否一样
# python是没有===    用is 来替代了
# is  判断is左右两边是不是同一个内存空间
# value  type   id  必须都一样

'''
酒店
    法外狂徒张三        李四       类似于   值不一样     
    单人间的张三       双人间的张三  类似于 值一样，但是数据类型不一样
    01单人间张三    02单人间的张三  值一样，类型一样，地址不一样
请问：
    值一样，数据类型一样的    ID肯定是一样的吗？  不一定？
    ID一样  那么值，和数据类型一样吗？           肯定一样的

ID一样，指的是就是同一份东西，同一份数据  

 
666    
'''

# print(1 == 1)   # 对的
# print(1 == 1)   # 对的
# 结果是对还是错？
# a = 1
# b = a  # a是个变量名
# print(b)
# 定义一个变量
# 变量名 = 值
# print(a=b)
# print('我是老杨')
'''
酒店    房间 ==》住人    变量
请问酒店里面有房型  单人间  双人间  总统套？
请问为什么有房型这个东西出现？

客人需求不同   1  情侣入住  家庭入住  
1. 满足不同的客户的需求
2. 更合理的利用酒店的空间？
对应编程里面  我讲的是Python  融会贯通  
内存空间有限，为了更合理的规划内存空间，也是为了更好的操作数据
所以有数据类型这个东西


'''
# a = 1
# print(a)       # 查看变量的值  value
# print(type(a)) # 查看变量的数据类型
# print(id(a))   # 查看变量的内存地址的唯一编号

'''
扩展   装逼的知识点  难点   不需要重点掌握  了解即可
part1   创建一个变量就立马在内存中开辟一个内存空间 
part2   违背了上面的说法   可能会出现在刁钻的面试题
小整数池的概念  一些字符串也有这个，这些字符串的范围不需要去考虑  
[-5,256]
当数字是[-5,256]这个区间的数字的时候，就会用同一个内存空间
这是个锅  但不是我的锅==》pycharm的锅
遇到过这个情况    打开pycharm比较卡   安装包  400M

请问运行Python代码有哪些方式？
1. 交互式   临时的
2. 文件式   永久的
运行Python的代码和pycharm有关系吗？

'''
# a = 257
# b = 257
# print(id(a))
# print(id(b))
# print(a is b)  # 不一样   为什么不一样？
# 按道理来说 a和b ID应该一样吗？ a is b 成立还是不成立？
# 酒店为例
# 来一个客人就开间房   这两个客人的地址一样吗？   肯定不一样的

# 扩展一个

# 今天的课程总结
# 1. 定义变量在内存中发生的事情  如何定义变量
# 2. 使用变量  使用的本质
# 3. 变量名的命名规定和规范问题
# 4. 注释
name = "南风"
print(id(name))
print(type(name))
print(name)





